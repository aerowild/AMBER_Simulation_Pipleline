#!/usr/bin/perl -w

#Note: this script is a part of full script described below and only splits the pdb file {refer #to a)}.



system("rm pka.log");
#Writing log file
open(STDOUT, "| tee -ai pka.log");

#This script is intended to predict change in pka of desired residues during simulation, using #'propka' stand alone programme. It takes the bunch of pdb files as an input files. Bunch of #files has to be merged within single file and seperated by 'END' tag. This kind of file is #generated by VMD when coordinates of more than one molecule/confirmation are saved in pdb format #(i.e. it saves all the files into single file seperated by 'END' field).

#Algo: a) input the file and split file by 'END' tag.
#      b) run "propka" for each pdb and store results in a temporary folder
#      c) display first file to identify the residue number and ask user to choose a residue
#      d) generate a data file to be used with xmgrace/excel and generate a graph

#________________________________________________________________________________________________________________________________________________________________________________________________________#
# a) --> starts
#________________________________________________________________________________________________________________________________________________________________________________________________________#
$ifile = "$ARGV[0]";
$dotpdb_check = substr($ifile,-4,4);
#print $dotpdb_check;
if ($ifile =~ /--help/) {print "\nThis script splits a pdb file containing many PDB files inside it into single PDB files\n Syntax to use this script is:\n ./pka.pl <input_multi_pdbfile>\n ./pka.pl --help\n\n";}	
	elsif($dotpdb_check =~ /.pdb/){
		#Use the input file given by command line and read it in an array		
		print "\nName of input file is $ifile\n";
		open(READINP, "$ifile");
		@input_pdb = <READINP>;
		
		#Split the pdb file into seperate pdb files
		$input_pdb = "@input_pdb";
		#print $input_pdb;
		$begin1='ATOM'; $begin2='HETATM';  $end='END';
		
		#Creating folder to extract pdb files
		system ("rm -R extractedPDBs");
		mkdir "extractedPDBs";
		
		#Entering into extractedPDBs directory
		chdir "extractedPDBs";
		$filenumber=1;
		$pdbfilename = "file$filenumber.pdb";
		foreach(@input_pdb)
		{
		#creating required pdb files
		open(WRITEPDB, ">>$pdbfilename");
		$c_line = $_;
		if ($c_line =~ /^$begin1/){print WRITEPDB "$c_line";}
			elsif($c_line =~ /^$begin2/){print WRITEPDB "$c_line";}
			elsif($c_line =~ /^$end/) {print "\n$pdbfilename\n";print WRITEPDB "$c_line"; $filenumber=$filenumber+1; $pdbfilename = "file$filenumber.pdb";}
		}
		#reverting to origional directory
		chdir "..";
		$nof = $filenumber-1;
		print "\nTotal number of pdb files: $nof\nextracted PDB files are save in \"extractedPDBs\" folder";
	    }else{print "\n\n WARNING: Wrong file extension detected.\nPlease provide a *.pdb file to be processed\n use --help for help\n\n"}
exit;
#________________________________________________________________________________________________________________________________________________________________________________________________________#
# a) --> endsXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#________________________________________________________________________________________________________________________________________________________________________________________________________#

